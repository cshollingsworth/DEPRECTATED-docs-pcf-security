---
title: Rotating Certificates
owner: Ops Manager
---

This topic describes how to check the expiration date of and rotate certificate authorities (CAs) and leaf certificates in <%= vars.product_name_full %> (<%= vars.product_name %>).

This includes the <%= vars.ops_manager %> root CA, BOSH NATS CA, and leaf certificates in <%= vars.product_name %> that are visible to the <%= vars.ops_manager %> API.

<p class='note warning'><strong>Warning:</strong> The rotation procedures described in this topic do not work if the certificates have already expired. If the certificates have expired, contact <a href="https://support.pivotal.io/">Pivotal Support</a> for guidance.</p>

For information about rotating IPsec certificates, see [Rotating IPsec Certificates](https://docs.pivotal.io/addon-ipsec/credentials.html).


## <a id='overview'></a> Overview

The <%= vars.ops_manager %> API manages and lists internal CAs and leaf certificates that enable <%= vars.product_name %> components to communicate with each other securely using TLS. It can also list certificates used externally, such as SAML certificates that authenticate to an external identity provider (IDP).

Rotate CAs and leaf certificates before they expire to avoid downtime for your foundation.


## <a id='types'></a> Certificate Types

<%= vars.product_name %> uses a root CA and various leaf certificates. Root CAs are self-signed certificates that issue leaf certificates. Root CAs can be generated by Pivotal or custom.

Leaf certificates are signed by a CA and are used to identify resources in <%= vars.product_name %>. Both root CAs and leaf certificates require planned rotation in <%= vars.product_name %>.

The following types of <%= vars.product_name %> certificates require planned rotation:

* **<%= vars.ops_manager %> root CA:** The <%= vars.ops_manager %> root CA issues other certificates that <%= vars.product_name %> uses. The root CA can be a Pivotal-generated CA or your own custom CA. The <%= vars.ops_manager %> root CA expires four years after creation. For more information about viewing the root CAs for <%= vars.ops_manager %>, see [Listing the Root Certificate Authorities](https://docs.pivotal.io/pivotalcf/opsman-api/#listing-the-root-certificate-authorities) in the <%= vars.ops_manager %> API documentation.

* **Other internal CAs:** The following CAs are used primarily for internal purposes:
  * **BOSH NATS CA:** The BOSH NATS CA is rotated automatically when you rotate the <%= vars.ops_manager %> root CA. The BOSH NATS CA is rotatable in <%= vars.product_name %> v2.3.10 or later, <%= vars.product_name %> v2.4.4 or later, and <%= vars.product_name %> v2.5 or later. For more information, see [2.3.10](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/opsmanager-rn.html#2-3-10) in _<%= vars.ops_manager %> v2.3 Release Notes_ and [2.4.4](https://docs.pivotal.io/pivotalcf/2-4/pcf-release-notes/opsmanager-rn.html#2-4-4) in _<%= vars.ops_manager %> v2.4 Release Notes_.
  * **BOSH DNS CAs:** The BOSH DNS CAs are applied automatically when you upgrade to <%= vars.product_name %> v2.3. You cannot rotate the BOSH DNS CAs. To apply all BOSH DNS leaf certificates after upgrading to v2.3, you must rotate all certificates in your environment. For more information, see [BOSH DNS Certificate Authority Upgrades](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/opsmanager-rn.html#bosh-dns-certs) in _<%= vars.ops_manager %> v2.3 Release Notes_.

* **Non-configurable certificates:** Non-configurable certificates are leaf certificates either created by a CA stored in <%= vars.ops_manager %>, or created and stored by CredHub and managed by <%= vars.ops_manager %> calls to the CredHub API. Non-configurable certificates are issued directly by the <%= vars.ops_manager %> root CA, or by intermediate CAs in a chain of trust originated by the root CA. Non-configurable certificates expire after two years. For more information about about viewing non-configurable leaf certificates, see [Getting Information About Certificates for Products](https://docs.pivotal.io/pivotalcf/opsman-api/#getting-information-about-certificates-from-products). For more information about generating non-configurable leaf certificates, see [Generating New Certificates](https://docs.pivotal.io/pivotalcf/opsman-api/#generating-new-certificates) in the <%= vars.ops_manager %> API documentation.

* **Configurable certificates:** Configurable certificates are leaf certificates supplied by the user and pasted into configuration fields in <%= vars.ops_manager %>. Some configuration panes include a **Generate RSA Certificate** button that supplies valid certificates, but users can obtain configurable certificates from elsewhere. Configurable certificates generated by <%= vars.ops_manager %> typically expire after two years. For more information about viewing configurable leaf certificates, see [Getting Information About Certificates for Products](https://docs.pivotal.io/pivotalcf/opsman-api/#getting-information-about-certificates-from-products) in the <%= vars.ops_manager %> API documentation.

* **Non-rotatable certificates:** Non-rotatable certificates are leaf certificates that, like non-configurable certificates, are issued by the root CA. Unlike non-configurable certificates, non-rotatable certificates cannot be rotated by the <%= vars.ops_manager %> API. For more information about viewing non-rotatable leaf certificates, see [Getting Information About Certificates for Products](https://docs.pivotal.io/pivotalcf/opsman-api/#getting-information-about-certificates-from-products) in the <%= vars.ops_manager %> API documentation.

In addition to the types of certificates listed above, some Pivotal products issue their own tile certificates that are not managed by or visible to the <%= vars.ops_manager %> API. These tile certificates do not require planned rotation because they rotate automatically with product upgrades.

<%= vars.product_runtime %> (<%= vars.product_short %>) and Pivotal Container Service (PKS) both use tile certificates in addition to their <%= vars.ops_manager %> certificates.


## <a id='check-and-rotate'></a> Master Procedure: Check and Rotate Certificates

The following master procedure checks expiration dates of different types of internal certificates and rotates them only as necessary. You can run this procedure only when records show that your certificates will expire soon, or else periodically to comply your organization's security compliance policies.

To check and rotate certificates:

1. Follow the procedure in [Check <%= vars.ops_manager %> Root CA Expiration Date](#root-expiry) below and record your root CA expiration date.

1. Follow the procedure in [Check Leaf Certificate Expiration Dates](#leaf-expiry) below and record any leaf certificates that are expiring soon.

1. Follow the procedure in [Identify Non-Configurable, Configurable, and Unrotatable Leaf Certificates](#id-leaf-type) below to determine which types of leaf certificates require rotation.

1. Rotate certificates as necessary:
  1. If you have any non-rotatable certificates expiring soon, call [Pivotal Support](http://support.pivotal.io).
  1. If your root CA expires soon, follow the procedure in [Rotate Root and Leaf Certificates](#rotate-ca) below.
    <p class='note'><strong>Note:</strong> If you also have configurable leaf certificates expiring soon, <%= vars.company_name %> recommends that you follow the procedure in <a href="#rotate-config-after-new-root">Rotate Configurable Certificates</a> below. You can also rotate your configurable certificates separately and re-deploy later.</p>
  1. If you have non-configurable leaf certificates expiring soon, but not your root CA, follow the procedure in [Rotate Non-Configurable Leaf Certificates](rotate-non-configurable-certs.html).
  1. If you have configurable leaf certificates expiring soon, but not your root CA, follow the procedure in [Rotate Configurable Leaf Certificates](rotate-configurable-certs.html).


## <a id='checks'></a> Check Expiration Dates and Certificate Types

This section describes how to check the expiration dates of the CAs and leaf certificates that the <%= vars.ops_manager %> API lists and manages. It also explains how to identify the types of certificates that require manual rotation.

After identifying the types of certificates that expire soon, you can determine which certificate rotation procedure to follow.

### <a id='root-expiry'></a> Check <%= vars.ops_manager %> Root CA Expiration Date

This procedure describes how to check the expiration date for the <%= vars.ops_manager %> root CA. The <%= vars.ops_manager %> root CA expires four years after creation.

To check the <%= vars.ops_manager %> root CA expiration date:

1. Follow the procedure in [Using <%= vars.ops_manager %> API](../../customizing/ops-man-api.html) to target and authenticate with the <%= vars.ops_manager %> User Account and Authentication (UAA) server. Record your <%= vars.ops_manager %> access token, and use it for `UAA-ACCESS-TOKEN` in the steps below.
  <p class="note"><strong>Note:</strong> When you record your <%= vars.ops_manager %> access token, remove any newline characters such as <code>\n</code>.</p>

1. To retrieve the <%= vars.ops_manager %> root CA, use `curl` to make an <%= vars.ops_manager %> API call to the `/api/v0/certificate_authorities` endpoint. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <p class='note'><strong>Note:</strong> To make the JSON output more readable, you can pipe it to <a href="https://stedolan.github.io/jq/">jq</a> or another text editor with JSON formatting.</p>

1. In the `certificate_authorities` list returned, if there is more than one, find the CA with `"active": true`.

1. To determine the expiration date of the active CA, refer to its `expires_on` value. For example, the root CA shown below expires on September 5, 2019:
    <pre class="terminal">
    {
      "certificate&#95;authorities": [
        {
          "guid": "9c9a110c8f82a1e4aaca",
          "issuer": "Pivotal",
          "created&#95;on": "2017-09-05T22:47:53Z",
          "expires&#95;on": "2019-09-05T22:47:53Z",
          "active": true,
          "cert_pem": "\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-\
          [...]
          \n-----END CERTIFICATE\-\-\-\-\-\n"
    </pre>

### <a id='leaf-expiry'></a> Check Leaf Certificate Expiration Dates

This procedure describes how to check the expiration dates of non-configurable and configurable leaf certificates. Non-configurable leaf certificates expire after two years. Configurable leaf certificates generated by <%= vars.ops_manager %> also typically expire after two years.

To check the expiration dates of leaf certificates and identify the types of leaf certificates that expire soon:

1. If you have not already done so, follow the procedure in [Using <%= vars.ops_manager %> API](../../customizing/ops-man-api.html) to target and authenticate with the <%= vars.ops_manager %> UAA server. Record your <%= vars.ops_manager %> access token, and use it for `UAA-ACCESS-TOKEN` in the following steps.
  <p class="note"><strong>Note:</strong> When you record your <%= vars.ops_manager %> access token, remove any newline characters such as <code>\n</code>.</p>

1. To check the system for certificates that expire within a given time interval, use `curl` to call the `/api/v0/deployed/certificates?expires_within=TIME` API endpoint, replacing `TIME` with an integer-letter code. Valid letter codes are `d` for days, `w` for weeks, `m` for months, and `y` for years.
  <br>
  <br>
  For example, to search for certificates expiring within six months, run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/deployed/certificates?expires_within=6m" \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `CERTIFICATE-GUID` is the GUID of your CA that you retrieved in the previous section.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <p class='note'><strong>Note:</strong> To make the JSON output more readable, you can pipe it to <a href="https://stedolan.github.io/jq/">jq</a> or another text editor with JSON formatting.</p>

1. To determine the expiration date of each certificate, see its `expires_on` value.

1. After you identify the list of certificates that expire soon, follow one of the procedures in [Rotate Certificates](#rotate) below.


## <a id='rotate'></a> Rotate Certificates

Output from the `deployed/certificates` endpoint, such as the output generated in [Check Leaf Certificate Expiration Dates](#leaf-expiry) above, combines information about non-configurable, configurable, and unrotatable leaf certificates into a single list.

You must manually rotate the different leaf certificate types in different ways.

The following rules identify the type of each leaf certificate requiring rotation:

* **Non-rotatable certificates:** Non-rotatable leaf certificates have the following property value:
  * `variable_path` is `/opsmgr/bosh_dns/tls_ca`
    <br>
    <br>
    If you have non-rotatable certificates expiring soon, call [Pivotal Support](https://support.pivotal.io).

* **Non-configurable certificates:** Non-configurable leaf certificates have the following property values, but are not non-rotatable as identified above:
  * `configurable` is `false`
  * `location` is either `ops_manager` or `credhub`

* **Configurable certificates:** Configurable leaf certificates have the following property value:
  * `configurable` is `true`


## <a id='rotate'></a> Rotate CAs and Leaf Certificates

The following procedures rotate the <%= vars.ops_manager %> root CA, BOSH NATS CA, and leaf certificates that are listed or managed by the <%= vars.ops_manager %> API.

<p class='note'><strong>Note:</strong> The rotation procedures described in this topic does not work when your certificates have already expired.  If your certificates have expired, contact <a href="https://support.pivotal.io/">Pivotal Support</a> for guidance.</p>


## <a id='rotate-ca'></a> Rotate Root and Leaf Certificates

This procedure uses the <%= vars.ops_manager %> API to rotate the <%= vars.ops_manager %> root CA, the BOSH NATS CA, and the intermediate CAs and non-configurable leaf certificates underneath them.

<p class="note"><strong>Note:</strong> The BOSH NATS CA is automatically rotated when you rotate the <%= vars.ops_manager %> root CA. For more information, see <a href="#types">Certificate Types</a> below.</p>

Rotating the <%= vars.ops_manager %> root CA automatically rotates all configurable leaf certificates. You can also rotate configurable leaf certificates separately from rotating the root CA. For information about rotating configurable leaf certificates without also rotating the root CA, see [Rotate Configurable Leaf Certificates](rotate-configurable-certs.html).

<%= vars.product_name %> users never need to manually rotate intermediate CAs, because they rotate automatically when the root CA is rotated.

To prevent system downtime, this procedure includes two BOSH redeploys. When you click **Apply Changes** for the first time, BOSH applies new certificates to <%= vars.product_name %> components alongside the old ones. The second **Apply Changes** then deletes the old certificates. Each successful redeploy verifies that the certificate rotation process is proceeding correctly.

<p class='note'><strong>Note:</strong> The names of the <strong>Upgrade All Service Instances</strong> and <strong>Recreate All Service Instances</strong> errands may be slightly different between services.</p>

<p class="note warning"><strong>Warning:</strong> You must complete these steps in the exact order specified. Otherwise, you may damage your deployment.</p>

<p class="note warning"><strong>Warning:</strong> If you use mutual TLS for route integrity, do not attempt to rotate CAs. Instead, contact <a href="https://support.pivotal.io">Pivotal Support</a>. For more information, see <a href="https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/runtime-rn.html#cert-rotation-with-mutual-tls-route-integrity">Certificate Authority Rotation is Not Working in Some <%= vars.product_short %> Configurations</a> in <em><%= vars.product_runtime %> v2.3 Release Notes</em>.</p>

### <a id='add-new-ca'></a> Step 1: Add a New Root CA

This section describes how to add a new root CA for <%= vars.ops_manager %>. The new root CA can be a Pivotal-generated CA or your own custom CA.

To add a new root CA for <%= vars.ops_manager %> and regenerate the BOSH NATS CA:

1. If you have not already done so, follow the procedure in [Using <%= vars.ops_manager %> API](../../customizing/ops-man-api.html) to target and authenticate with the <%= vars.ops_manager %> User Account and Authentication (UAA) server. Record your <%= vars.ops_manager %> access token, and use it for `UAA-ACCESS-TOKEN` in the following procedures.
  <p class="note"><strong>Note:</strong> When you record your <%= vars.ops_manager %> access token, remove any newline characters such as <code>\n</code>.</p>

1. Use <%= vars.ops_manager %> to generate a new CA, or add your own custom CA.
  <p class ="note"><strong>Note:</strong> Elliptic Curve Digital Signature Algorithm (ECDSA) certificates are not supported in <%= vars.product_name %>.</p>
  * **To use your own custom CA:** Call the <%= vars.ops_manager %> API `certificate_authorities` endpoint. Run:

        ```
        curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
            -X POST \
            -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"cert_pem": "-----BEGIN CERTIFICATE-----\CUSTOM-CERTIFICATE", "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\RSA-KEY"}'
        ```
        Where:
        * `CUSTOM-CERTIFICATE` is your custom CA.
        * `RSA-KEY` is your RSA key.
        * `UAA-ACCESS-TOKEN` is your UAA access token.
        <br>
        <br>
        If the command succeeds, the API returns a response that includes the new CA certificate. For example:
        <pre class="terminal">
            HTTP/1.1 200 OK
            {
              "certificate&#95;authorities": [
                {
                  "guid": "f7bc18f34f2a7a9403c3",
                  "issuer": "CUSTOM-CERTIFICATE",
                  "created&#95;on": "2017-01-09",
                  "expires&#95;on": "2021-01-09",
                  "active": true,
                  "cert&#95;pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
                }
              ]
            }
        </pre>
  * **To use a Pivotal-generated CA**: Call the <%= vars.ops_manager %> API `generate` endpoint. Run:

        ```
        curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/generate" \
            -X POST \
            -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
            -H "Content-Type: application/json" \
            -d '{}'
        ```
        Where:
        * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
        * `UAA-ACCESS-TOKEN` is your UAA access token.
        <br>
        <br>
        If the command succeeds, the API returns a response that includes the new CA certificate:
        <pre class="terminal">
              HTTP/1.1 200 OK
          {
              "guid": "f7bc18f34f2a7a9403c3",
              "issuer": "Pivotal",
              "created&#95;on": "2017-01-19",
              "expires&#95;on": "2021-01-19",
              "active": false,
              "cert&#95;pem": "-----BEGIN EXAMPLE CERTIFICATE-----
              MIIC+zCCAeOgAwIBAgIBADANBgkqhkiG9w0BAQsFADAfMQswCQYDVQQGEwJVUzEQ
              EXAMPLEoCgwHUGl2b3RhbDAeFw0xNDarthgyMTQyMjVaFw0yMTAxMTkyMTQyMjVa
              EXAMPLEoBgNVBAYTAlVTMRAwDgYDVVaderdQaXZvdGFsMIIBIjANBgkqhkiG9w0B
              EXAMPLEoAQ8AMIIBCgKCAQEAyV4OhPIIZTEym9OcdcNVip9Ev0ijPPLo9WPLUMzT
              EXAMPLEo/TgD+DP09mwVXfqwBlJmoj9DqRED1x/6bc0Ki/BAFo/P4MmOKm3QnDCt
              EXAMPLEooqgA++2HYrNTKWJ5fsXmERs8lK9AXXT7RKXhktyWWU3oNGf7zo0e3YKp
              EXAMPLEoh1NwIbNcGT1AurIDsxyOZy1HVzBLTisMyDogJmSCLsOw3qUDQjatjXKw
              EXAMPLEojG3nv2hvD4/aTOiHuKM3+AGbnaS2MdIOvFOh/7Y79tUp89csK0gs6uOd
              EXAMPLEohe4DcKw5CzUTfHKNXgHyeoVOBPcVQTp4lJp1iQIDAQABo0IwQDAdBgNV
              EXAMPLEoyH4y7VEuImLStXM0CKR8uVqxX/gwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
              EXAMPLEoBAMCAQYwDQYJKoZIhvcNAQELBQADggEBALmHOPxdyBGnuR0HgR9V4TwJ
              EXAMPLEoGLKVT7am5z6G2Oq5cwACFHWAFfrPG4W9Jm577QtewiY/Rad/PbkY0YSY
              EXAMPLEokrfNjxjxI0H2sr7qLBFjJ0wBZHhVmDsO6A9PkfAPu4eJvqRMuL/xGmSQ
              EXAMPLEoCynMNz7FgHyFbd9D9X5YW8fWGSeVBPPikcONdRvjw9aEeAtbGEh8eZCP
              EXAMPLEob33RuR+CTNqThXY9k8d7/7ba4KVdd4gP8ynFgwvnDQOjcJZ6Go5QY5HA
              EXAMPLEoPFW8pAYcvWrXKR0rE8fL5o9qgTyjmO+5yyyvWIYrKPqqIUIvMCdNr84=
                -----END EXAMPLE CERTIFICATE-----
                "
        </pre>

1. Confirm that your new CA has been added by listing all of the root CAs for <%= vars.ops_manager %> by running:

      ```
      curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -X GET \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
      ```
      Where:
      * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
      * `UAA-ACCESS-TOKEN` is your UAA access token.
      <br>
      <br>
      The API call returns the GUID of the newly added CA. For example:
      <pre class="terminal">
        HTTP/1.1 200 OK
        {
          "certificate&#95;authorities": [
            {
              "guid": "f7bc18f34f2a7a9403c3",
              "issuer": "Pivotal",
              "created&#95;on": "2017-01-09",
              "expires&#95;on": "2021-01-09",
              "active": true,
              "cert&#95;pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
            }
            {
              "guid": "a8ee01e33e3e3e3303e3",
              "issuer": "Pivotal",
              "created&#95;on": "2017-04-09",
              "expires&#95;on": "2021-04-09",
              "active": false,
              "cert&#95;pem": "-----BEGIN CERTIFICATE-----\zBBBC+eAAAe1gAwAAAeZ....etc"
            }
          ]
        }
      </pre>

1. Identify the newly added CA, which has `active` set to `false`. Record its GUID.

1. Navigate to `https://OPS-MANAGER-FQDN` in a browser, where `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.

1. Log in to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the **BOSH Director** tile.

1. Select **Director Config**.

1. Select **Recreate All VMs**. This propagates the new CA to all VMs to prevent downtime.

1. Return to the <%= vars.ops_manager %> Installation Dashboard.

1. If you have service tiles installed, for each service tile:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. Enable the **Upgrade All Service Instances** errand. Running this errand is necessary to push CredHub certificate updates to each service instance.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand.
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
        1. When the deploy finishes, manually push the BOSH NATS CA to each of its service instances. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.

1. If you do not have any service tiles installed:
    1. Click **Review Pending Changes**.
    1. Click **Apply Changes**.

1. When the deploy finishes and you have completed all necessary tasks to update service instances, continue to the next section, [Activate Root CA](#activate-new-ca).

### <a id='activate-new-ca'></a> Step 2: Activate Root CA

To activate the new root CA:

1. Make an <%= vars.ops_manager %> API call that activates the new CAs. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/CERTIFICATE-GUID/activate" \
      -X POST \
      -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
      -H "Content-Type: application/json" \
      -d '{}'
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `CERTIFICATE-GUID` is the GUID of your CA that you retrieved in the previous section.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <br>
    <br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. List your root CAs again to confirm that the new <%= vars.ops_manager %> root CA is active. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -X GET \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.

1. Examine the response to ensure that your new CA has the `active` property set to `true`.

### <a id='rotate-config-after-new-root'></a> Step 3: Rotate Configurable Leaf Certificates

Any configurable certificates generated from the <%= vars.ops_manager %> root CA must be rotated. These are the certificates that you generated using **Generate RSA Certificate** in the <%= vars.ops_manager %> UI. For example, see [Providing a Certificate for Your TLS Termination Point](https://docs.pivotal.io/pivotalcf/2-3/opsguide/security_config.html).

To regenerate and rotate configurable leaf certificates, do the following for each configurable certificate that expires soon:

1. Find the text field where the certificate is configured within the <%= vars.ops_manager %> UI. You might need to look through multiple configuration panes to identify the location of the certificate configuration text field. Use the following fields to identify the location of the certificate configuration text field:
  * The `product_guid` field in the <%= vars.ops_manager %> API output can help identify the tile in which the certificate is configured. For example, the prefix `p-bosh-` refers to the BOSH Director tile, and the prefix `cf-` refers to the <%= vars.product_short %> tile.
  * The `property_reference` field in the <%= vars.ops_manager %> API output can help identify the configuration pane in which the certificate is configured. For example, the `uaa.service_provider_key_credentials` property is configured in the **UAA** pane of the <%= vars.product_short %> tile.

1. Copy a new value for the certificate into the text field or generate a new certificate using the
**Generate RSA Certificate** button.

1. Click **Save** at the bottom of each pane in which you added new certificates.

### <a id='regenerate-from-new-root'></a> Step 4: Rotate Non-Configurable Leaf Certificates from the New CAs

After activating the new <%= vars.ops_manager %> root CA, you must rotate non-configurable leaf certificates from the root CA.

To rotate non-configurable leaf certificates from the new root CA:

1. Make a call to the <%= vars.ops_manager %> API to regenerate all non-configurable certificates and apply the new root CA to your existing BOSH Director. Run:

    ```
      curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/active/regenerate" \
            -X POST \
            -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
            -H "Content-Type: application/json" \
            -d '{}'
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <br>
    <br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the **BOSH Director** tile.

1. Select **Director Config**.

1. Select **Recreate All VMs**. This propagates the new CAs to all VMs deployed by the BOSH Director to prevent downtime.

1. Return to the <%= vars.ops_manager %> Installation Dashboard.

1. If you have service tiles installed, for each service tile:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. Enable the **Upgrade All Service Instances** errand. Running this errand is necessary to push CredHub certificate updates to each service instance.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand.
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
        1. When the deploy finishes, manually push the BOSH NATS CA to each of its service instances. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.

1. If you do not have any service tiles installed:
    1. Click **Review Pending Changes**.
    1. Click **Apply Changes**.

1. When the deploy finishes and you have completed all necessary tasks to update service instances, continue to the next section, [Delete the Old Root CA](#delete).

### <a id='delete'></a> Step 5: Delete the Old Root CA

After activating new CAs and rotating leaf certificates from the new CAs, you should delete the old <%= vars.ops_manager %> root CA from your foundation.

If your old root CA or leaf certificates have been compromised, you must delete the old root CA immediately. Otherwise, the old root CA and its leaf certificates may still be trusted, which compromises your foundation's security. If your old root CA or leaf certificates have not been compromised, <%= vars.company_name %> recommends that you delete the old root CA as soon as possible, but you can also delete it at a later time, such as in conjunction with another deploy.

<p class="note warning"><strong>Warning:</strong> Before you delete the old CA, ensure that you reviewed the <strong>Review Pending Changes</strong> page and clicked <strong>Apply Changes</strong> as part of <a href="#regenerate-from-new-root">Rotate Non-Configurable Leaf Certificates from the New CAs</a> above.</p>

To delete the old <%= vars.ops_manager %> root CA:

1. List your root CAs to retrieve the GUID of the old, inactive <%= vars.ops_manager %> root CA. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -X GET \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.

1. Use `curl` to make an API call to delete the old <%= vars.ops_manager %> root CA. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/OLD-CERTIFICATE-GUID" \
          -X DELETE \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `OLD-CERTIFICATE-GUID` is the GUID of the old <%= vars.ops_manager %> root CA.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <br>
    <br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the **BOSH Director** tile.

1. Select **Director Config**.

1. Enable the **Recreate VMs deployed by the BOSH Director** checkbox.

1. Return to the <%= vars.ops_manager %> Installation Dashboard.

1. If you have service tiles installed, for each service tile:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. Enable the **Upgrade All Service Instances** errand. Running this errand is necessary to push CredHub certificate updates to each service instance.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand. Running this errand pushes BOSH agent certificate updates to service instances.
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
        1. When the deploy finishes, manually push BOSH agent certificate updates to each service instance. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.

1. If you do not have any service tiles installed:
    1. Click **Review Pending Changes**.
    1. Click **Apply Changes**.
